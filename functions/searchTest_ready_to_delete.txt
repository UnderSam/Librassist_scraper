
exports.searchTest = functions.database.ref('/search_test/search_key/key')
    .onWrite(event => {

    
    var links=[];

	const searchkey = event.data.val();
    console.log("search for",searchkey);

	var options = {
			    uri: 'http://webpac.lib.ntpu.edu.tw/search.cfm?',
			    qs: {
			        m:"ss",
			        k0:searchkey,
			        t0:"k",
			        c0:"and",
			        list_num:"10",
			        current_page:"1",
			    },
			    headers: {
			        'User-Agent': "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36",
					"Accept-Language":"en-US,en;q=0.9",
					"Accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8",
					"Connection":"keep-alive"
			    },
			    json: true, // Automatically parses the JSON string in the response
				transform: function(body){
					return cheerio.load(body);
				}
			};
			rp(options)
			.then(function($){
					var title;
					var	author;
				
					var json = {title:"",author:"",link:"",isFinish:"false",refresh:"false"};
					$(".list_box").filter(function(){
							var data_title = $(this).children().find("li>a").text().trim();
							var data_author = $(this).children().find(".product_info_content>p").first().text().trim();
							var link = $(this).children().find("li>a").attr("href");	
							data_author = data_author.replace("作者:","");

							if(data_title!=""){
								var getlink = "http://webpac.lib.ntpu.edu.tw/"+link;
								json.title = data_title;
								json.author = data_author;
								json.link = getlink;
								
								admin.database().ref('/search_test/search_result').push(json);
							}
					})
					var Allpage = $(".list_info").find("p").text().trim();
					Allpage = Allpage.split("/")[0];
					Allpage = Allpage.replace(/ /,"");
					Allpage = Allpage.split(",")[1];
					Allpage = Allpage.replace("共 ","");
					Allpage = Allpage.replace(" 筆","");

					console.log("All Page : "+Allpage);	
					event.data.ref.parent.child('Allpage').set(Allpage);
					event.data.ref.parent.child('currentPage').set("1");
			})
			.then(function(){
				 return event.data.ref.parent.child('isFinish').set("True");
			})
			.catch(function(err){
				console.log(err);
				
			});
		
      // You must return a Promise when performing asynchronous tasks inside a Functions such as
      // writing to the Firebase Realtime Database.
      // Setting an "uppercase" sibling in the Realtime Database returns a Promise.
      return event.data.ref.parent.child('isFinish').set("Pending");
      // [END searchkeyBody]
    });
// [END searchkey]
// [END all]
exports.searchUrlTest = functions.database.ref('/search_test/search_result/{pushId}/link')
    .onCreate(event => {
   
    var links=[];

	const searchUrl = event.data.val();
	
	var options = {
			    uri: searchUrl,
			    headers: {
			        'User-Agent': "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36",
					"Accept-Language":"en-US,en;q=0.9",
					"Connection":"keep-alive"
			    },
			    json: true, // Automatically parses the JSON string in the response
				transform: function(body){
					return cheerio.load(body,{decodeEntities: false});
				}
			};
			rp2(options)
			.then(function($){		
				//var bookRef = admin.database.ref('');
				console.log("\nhtml load success");

				var title = $(".info").first().find("h2").text().trim();

				var author = $(".info").find("p").html().split("<br>")[0].trim();
				author = author.replace('作者 :','');

				var publisher = $(".info").find("p").html().split("<br>")[1].trim();
				publisher = publisher.replace('出版社 :','');

				var publish_year = $(".info").find("p").html().split("<br>")[2].trim();
				publish_year = publish_year.replace("出版年 : ",'');

				var ISBN_tag = false;
				var ISBN = $(".info_box").find("p").html().split("<br>");
				for(var key in ISBN)
				{
					var text = ISBN[key].trim();
					if(!text.search("ISBN") && ISBN_tag==false)
					{
						var first_ISBN = text.replace("ISBN ： ","");
						//console.log(first_ISBN);
						ISBN_tag=true;
						break;
					}
				}

				var Bookjson = {
					"title":title,
					"author":author,
					"publisher":publisher,
					"publish_year":publish_year,
					"ISBN":first_ISBN,
					"isFinish":"true"
				};
				event.data.ref.parent.update(Bookjson);
							
							//console.log(Bookjson);		
		})
		.then(function(){
			sleep(2000);
			if(event.data.ref.parent.child('isFinish').val()=="Pending")
				{console.log("search failed!");}
			else 
				{console.log("search finish!");}
			//event.data.ref.parent.child('isFinish').set("Finish!");
		})
		.catch(function(err){
			//console.log(err);
			//console.log("too late!");
		});
		

    return event.data.ref.parent.child('isFinish').set("Pending!");
      // [END searchkeyBody]
    });
// [END searchkey]
// [END all]